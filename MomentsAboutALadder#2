using System;
using static System.Console;

namespace calc
{
    internal class MomentsAboutALadder
    {
        public static void CalculateLadderExercise()
        {
            var angle = Utility.Ask("What is the angle of elevation? \n");
            WriteLine(
                "How many forces are in play here? *This includes weight of the ladder as a force*");
            var numForces = ReadLine();
            switch (numForces)
            {
                //question 11 mixed exercise 4
                case "2":
                {
                    WriteLine(
                        "We will be trying to workout an unknown force in a system that is in equilibrium");
                    var firstForce = Utility.Ask("What is the MASS of the ladder? \n");
                    WriteLine("We will be taking moments from the bottom of the ladder");
                    var distanceFirstForce =
                        Utility.Ask("What is the distance of the weight from the bottom of the ladder? \n");
                    var unknownForceDistance =
                        Utility.Ask("What is the distance of the unknown force from the bottom of the ladder \n");
                    var angle1 = Math.PI / 180 * angle;
                    var trigAngle = Math.Cos(angle1);
                    var firstMoment = trigAngle * firstForce * distanceFirstForce;
                    var unknownForce = firstMoment / unknownForceDistance * 9.8;
                    WriteLine("The magnitude of the unknown force is {0}n", unknownForce);
                    break;
                }
                case "3":
                {
                    WriteLine(
                        "We will be trying to workout the distance an unknown force from the bottom of the ladder");
                    WriteLine("Is friction involved?");
                    if (ReadLine() == "yes")
                    {
                        WriteLine("Is friction given or is the coefficient of friction given?");
                        if (ReadLine() == "friction")
                        {
                            WriteLine("Do you want to work out the value of an unknown force, distance or angle?");
                            var option = ReadLine();
                            switch (option)
                            {
                                case "unknown force":
                                {
                                    break;
                                }
                                case "distance":
                                {
                                    var friction1 = Utility.Ask(
                                        "What is the total friction? * CAUTION, it is assumed this is in newtons, if your value for friction is in g please convert by multiplying by 9.8 \n");
                                    WriteLine("We will be taking moments from the bottom of the ladder");
                                    var firstForce = Utility.Ask("What is the MASS of the ladder? \n");
                                    var distanceFirstForce =
                                        Utility.Ask(
                                            "What is the distance of the weight from the bottom of the ladder \n");
                                    var angle1 = Math.PI / 180 * angle;
                                    var trigAngle = Math.Cos(angle1);
                                    var trigAngle2 = Math.Sin(angle1);
                                    var firstMoment = trigAngle * distanceFirstForce * firstForce * 9.8;
                                    var ladderLength = Utility.Ask("What is the length of the ladder \n");
                                    var secondMoment = trigAngle2 * ladderLength * friction1;
                                    var secondForce =
                                        Utility.Ask(
                                            "What is the MASS of the force you are trying to find the distance of? \n");
                                    var thirdMoment = secondForce * trigAngle * 9.8;
                                    var unknownDistance = (secondMoment - firstMoment) / thirdMoment;
                                    WriteLine("The distance you tried to find is {0}m", unknownDistance);
                                    break;
                                }
                                case "angle":
                                {
                                    break;
                                }
                            }
                        }
                        else
                        {
                            var μ = Utility.Ask("What is the co-efficient of friction? \n");
                            WriteLine("Is the friction on the ground or wall?");
                            var groundWall = ReadLine();
                            if (groundWall == "ground")
                            {
                                WriteLine("Do you want to work out the value of an unknown force, distance or angle?");
                                var option = ReadLine();
                                switch (option)
                                {
                                    //madas equilibrium rigid bodies question 11
                                    case "unknown force":
                                    {
                                        WriteLine("We will be taking moments from the bottom of the ladder");
                                        var firstForce = Utility.Ask("What is the MASS of the ladder? \n");
                                        var distanceFirstForce =
                                            Utility.Ask(
                                                "What is the distance of the weight from the bottom of the ladder\n");
                                        var ladderLength = Utility.Ask("What is the length of the ladder \n");
                                        var reactionDistance =
                                            Utility.Ask("What is the distance of the reaction force \n");
                                        var angle1 = Math.PI / 180 * angle;
                                        var trigAngle = Math.Cos(angle1);
                                        var trigAngle2 = Math.Sin(angle1);
                                        var force =
                                            (ladderLength * μ * trigAngle2 * firstForce -
                                             distanceFirstForce * firstForce * trigAngle) /
                                            (reactionDistance * trigAngle - ladderLength * μ * trigAngle2);
                                        WriteLine(force);

                                        break;
                                    }
                                    case "distance": //madas equilibrium rigid bodies question 11 modified
                                    {
                                        WriteLine("We will be taking moments from the bottom of the ladder");
                                        var firstForce = Utility.Ask("What is the MASS of the ladder? \n");
                                        var distanceFirstForce =
                                            Utility.Ask(
                                                "What is the distance of the weight from the bottom of the ladder \n");
                                        var angle1 = Math.PI / 180 * angle;
                                        var trigAngle = Math.Cos(angle1);
                                        var trigAngle2 = Math.Sin(angle1);
                                        var ladderLength = Utility.Ask("What is the length of the ladder \n");
                                        var secondForce =
                                            Utility.Ask(
                                                "What is the MASS of the force you are trying to find the distance of? \n");
                                        var resolveUp = firstForce + secondForce;
                                        var unknownDistance =
                                            (ladderLength * μ * resolveUp * trigAngle2 -
                                             distanceFirstForce * firstForce * trigAngle) / (secondForce * trigAngle);
                                        WriteLine("The distance you tried to find is {0}m", unknownDistance);
                                        break;
                                    }
                                    case "angle":
                                    {
                                        //come back to this!!!!!!!!!!!!!!!
                                        //the angle is asked at the beginning of the code so will have to amend where appropriate
                                        break;
                                    }
                                }
                            }
                            else
                            {
                                // madas equilibrium rigid bodies question 6
                                WriteLine("Do you want to work out the value of an unknown force or a distance");
                                if (ReadLine() == "unknown force")
                                {
                                    WriteLine("We will be taking moments from the bottom of the ladder");
                                    var firstForce = Utility.Ask("What is the MASS of the ladder? \n");
                                    var distanceFirstForce =
                                        Utility.Ask(
                                            "What is the distance of the weight from the bottom of the ladder\n");
                                    var reactionDistance = Utility.Ask("What is the distance of the reaction force \n");
                                    var angle1 = Math.PI / 180 * angle;
                                    var trigAngle = Math.Cos(angle1);
                                    var trigAngle2 = Math.Sin(angle1);
                                    var frictionalForce = μ * trigAngle * reactionDistance;
                                    var reactionForce = reactionDistance * trigAngle2;
                                    var firstMoment = trigAngle * distanceFirstForce * firstForce * 9.8;
                                    var rb = firstMoment / (frictionalForce + reactionForce);
                                    WriteLine(rb);
                                }
                                else
                                {
                                    WriteLine("We will be taking moments from the bottom of the ladder");
                                    var firstForce = Utility.Ask("What is the MASS of the ladder? \n");
                                    var distanceFirstForce =
                                        Utility.Ask(
                                            "What is the distance of the weight from the bottom of the ladder \n");
                                    var thirdForce = Utility.Ask("What is the mass of the second force \n");
                                    var angle1 = Math.PI / 180 * angle;
                                    var trigAngle = Math.Cos(angle1);
                                    var trigAngle2 = Math.Sin(angle1);
                                    var firstMoment = trigAngle * distanceFirstForce * firstForce * 9.8;
                                    var ladderLength = Utility.Ask("What is the length of the ladder \n");
                                    var secondMoment = trigAngle2 * ladderLength * thirdForce * 9.8;
                                    var secondForce =
                                        Utility.Ask(
                                            "What is the MASS of the force you are trying to find the distance of? \n");
                                    var thirdMoment = secondForce * trigAngle * 9.8;
                                    var unknownDistance = (secondMoment - firstMoment) / thirdMoment;
                                    WriteLine("The distance you tried to find is {0}m", unknownDistance);
                                }
                            }
                        }
                    }
                    else
                    {
                        WriteLine("We will be taking moments from the bottom of the ladder");
                        var firstForce = Utility.Ask(" What is the MASS of the ladder?\n");
                        WriteLine("");
                        var distanceFirstForce =
                            Utility.Ask("What is the distance of the weight from the bottom of the ladder \n");
                        var thirdForce = Utility.Ask("What is the mass of the second force \n");
                        var angle1 = Math.PI / 180 * angle;
                        var trigAngle = Math.Cos(angle1);
                        var trigAngle2 = Math.Sin(angle1);
                        var firstMoment = trigAngle * distanceFirstForce * firstForce * 9.8;
                        var ladderLength = Utility.Ask("What is the length of the ladder \n");
                        var secondMoment = trigAngle2 * ladderLength * thirdForce * 9.8;
                        var secondForce =
                            Utility.Ask(" What is the MASS of the force you are trying to find the distance of?\n");
                        var thirdMoment = secondForce * trigAngle * 9.8;
                        var unknownDistance = (secondMoment - firstMoment) / thirdMoment;
                        WriteLine("The distance you tried to find is {0}m", unknownDistance);
                    }

                    break;
                }
                case "4":
                {
                    WriteLine("Is friction involved?");
                    if (ReadLine() == "yes")
                    {
                        WriteLine("What is the coefficient of friction?");
                        var friction1 = ReadLine();
                    }
                    else
                    {
                        WriteLine("We will be taking moments from the bottom of the ladder");
                        var distanceFirstForce =
                            Utility.Ask(" What is the distance of the first force from the bottom of the ladder\n");
                        var angle1 = Math.PI / 180 * angle;
                        var trigAngle = Math.Cos(angle1);
                        var firstMoment = trigAngle * distanceFirstForce;
                    }

                    break;
                }
            }
        }
    }
}
